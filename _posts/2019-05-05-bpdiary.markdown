---
layout: post
title: 혈압 다이어리 질병 예측 Application API 서버 개발
date: 2019-05-05 00:00:00 +0300
description: bpdiary project# Add post description (optional)
img: bpdiary.jpg # Add image post (optional)
--- 
### Stack : Spring3 , mybatis 
### 프로젝트 기간 (2018.04 ~ 2018.08)
### 1. 서비스 내용
- **Bpdiary App 내의 질병 예측 메뉴 중 자신의 혈압 및 콜레스트롤 수치를 입력하여 향후 자신이 고혈압,당뇨,동맥경화성 질환이 걸릴 확률을 예측하는 서비스.**  
![bp1]({{site.baseurl}}/assets/img/bp1.jpg)
![bp2]({{site.baseurl}}/assets/img/bp2.jpg)
![bp3]({{site.baseurl}}/assets/img/bp3.jpg)

---------------------------------------

### 2.담당 업무
**1**. 코호트(건강 보험 공단) 데이터를 활용하여 앞으로 흡연여부,비만,높은혈압이 지속될 경우 고혈압,당뇨,동맥경화성 질환이   
   걸릴 확률을 계산하는 **Java Daemon application** 개발
**2**. 위 Applicatioin을 통해 가공되어진 데이터를 **Csv format** 으로 추출 하여 **DB Migration**
**3**. 기존 Spring Server 에  **API 추가** 


#### 2.1 Java Daemon application 
#### 2.1.1 Cohort 데이터 파싱 및 모델 정의  
- cohort 데이터(2008~2015)는 txt파일로 각년도마다 **건강검진데이터**와 **진료 데이터**로 존재하였는데 , 이에 구분자 '|'를 추가하여 기준을 만듬. 
```java    
ex)"KEY_SEQ"|"SEQ_NO"|"RECU_FR_DT"|"CLAUSE_CD"|"ITEM_CD"|"DIV_TYPE_CD"|"DIV_CD"|"I_II_TYPE"|"UN_COST"|"AMT"|"DD_MQTY_EXEC_FREQ"|"MDCN_EXEC_FREQ"|"DD_MQTY_FREQ"    
    200500000001|1|20051206|01|01|1|AA154|1|10740|10740|1|1|
```  

- 위 구분자가 추가된 데이터 파일을 읽어 각 라인별로 파싱하고, 미리 만들어둔 건강검진,진료 Dto에 column을 맵핑 시킨 객체를 생성 

#### 2.1.2 질병이 걸릴 확률을 예측하는 알고리즘 설계
- 모집단 추출
    - 현재(2008) 기준으로 **건강검진**상에 과거 병력에 고혈압 및 당뇨가 없다고 응답한 사람
    - 5년이전까지의 **진료**데이터를 검색하여 고혈압 및 당뇨 치료를 받은적이 있는 사람
    - 2008 년도 건강검진 DB 상의 질환자를 ( 성별, 연령별, 당뇨여부, 흡연여부, 비만여부) 그룹별로 나눈다. 
- 각 그룹별로 1년,2년,3년,4년 각각 질환자가 얼마나 발생했는지 추적  
    - filter  
        - 성별
        - 연령
        - 흡연 여부
        - 비만 여부 
        - 당뇨 여부 
        
- filtering 된 데이터를  성별,연령별,당뇨,흡연,비만의 정보를 String Key로 만들어 객체로 생성
  ```java  
        public class Statics{
            private List<String> key; // ex) 1:10:O:O:O
            private long sickCount;
            ....
            ...
        }
        Map<String,Statics> list = new HashMap<>();
        public Map<String,Statics> recude(){
            StringBuffer newKey = new StringBuffer();
            
            for( 2008년 비환자 집단 ) {
                if(비교군.containsKey(2008년 비환자 집단 고유 Person Key))){
                        if(성별) key.append('남/여');
                        if(나이) key.append('연령별');
                        if(흡연) key.append('O');
                        if(비만) key.append('O');
                        if(당뇨) key.append('O');
                        ....
                   }
                if(list.containsKey(newKey)) // 같은 key를 가지고 있을 경우
                    Statics stCount = list.get(newKey);
                    ...
                    list.put(newKey,stCount);
                else{
                    Statics stCount = new Stcount();
                    list.put(newKey,stCount)
                }
            }
        
  ```  
  
 결과 샘플
  ![bp4]({{site.baseurl}}/assets/img/bp4.jpg)
  ...
  ...
  
#### 2.2 CSV format 추출  
- 위 결과 Format 을 토대로 나머지 연령 및 성별 Data도 파싱하여 Csv 파일로 추출. 
#### 2.2.1 DB Migration
- PredictionResult DB Table 설계 
- 추출된 csv 파일을 한줄씩 읽고 ','로 split 후 DB Insert 시킴.     

#### 3.1 API 추가
- ...

#### 프로젝트를 진행 하면서 ..
- Java Daemon 을 배포해 Application을 실행 하는중 자꾸 프로세스가 행이걸려 에러 로그도 안찍히는 현상이 계속 발생했다. 이유를 한참동안 찾아 헤메던중  
자바 프로세스가 올라가있는 메모리가 파일을 읽어 들일수 있는 메모리가 부족하여 자꾸 프로그램이 걸리는 현상일 수도 생각하여 자바 데몬 실행시 .

- 소