---
layout: post
title: 혈압 다이어리 질병 예측 Application 개발
date: 2019-04-10 00:00:00 +0300
description: bpdiary project# Add post description (optional)
img: bpdiary.jpg # Add image post (optional)
--- 
### 서비스 내용  
- **자신의 혈압 및 콜레스트롤 수치를 입력하여 향후 자신이 고혈압,당뇨,동맥경화성 질환이 걸릴 확률을 예측하는 서비스.**  
![bp1]({{site.baseurl}}/assets/img/bp1.jpg)
![bp2]({{site.baseurl}}/assets/img/bp2.jpg)
![bp3]({{site.baseurl}}/assets/img/bp3.jpg)

### 담당 업무
1. 코호트(건강 보험 공단) 데이터를 활용하여 앞으로 흡연여부,비만,높은혈압이 지속될 경우 고혈압,당뇨,동맥경화성 질환이   
   걸릴 확률을 계산하는 **Java Application** 개발  
2. 위 Application 을 통해 가공되어진 데이터를 **csv file** 로 추출 하고 또한 그 데이터를 DB 스키마에 맞게 변환하여 저장   
3. Server가 부팅될 때 DB에서 특정 테이블을 full scan 후 , 아래 있는 알고리즘을 통해 추출된 데이터를 API를 통해 서빙.

  
### **Core logic**

#### Cohort 데이터 파싱   
- cohort 데이터(2008~2015)는 txt파일로 각년도마다 **건강검진데이터**와 **진료 데이터**로 존재하였는데 , 이에 구분자 '|'를 추가하여 기준을 만듬. 
```java    
ex)"KEY_SEQ"|"SEQ_NO"|"RECU_FR_DT"|"CLAUSE_CD"|"ITEM_CD"|"DIV_TYPE_CD"|"DIV_CD"|"I_II_TYPE"|"UN_COST"|"AMT"|"DD_MQTY_EXEC_FREQ"|"MDCN_EXEC_FREQ"|"DD_MQTY_FREQ"    
    200500000001|1|20051206|01|01|1|AA154|1|10740|10740|1|1|
```  
- 위 구분자가 추가된 데이터 파일을 읽어 각 라인별로 파싱하고, 미리 만들어둔 건강검진,진료 Dto에 column을 맵핑 시킨 객체를 생성 

#### Cohort 데이터 저장
- 모집단 추출
    - **현재(2008) 기준으로 **건강검진**상에 과거 병력에 고혈압 및 당뇨가 없다고 응답한 사람**
    - 5년이전까지의 **진료**데이터를 검색하여 고혈압 및 당뇨 치료를 받은적이 있는 사람
    - 2008 년도 건강검진 DB 상의 질환자를 ( 성별, 연령별, 당뇨여부, 흡연여부, 비만여부) 그룹별로 나눈다. 
- **각 그룹별로 1년,2년,3년,4년 각각 질환자가 얼마나 발생했는지 추적**  
    - filter  
        - 성별
        - 연령
        - 흡연 여부
        - 비만 여부 
        - 당뇨 여부 
        
- **Data 그룹화**   
    위에서 filtering 된 데이터를 그룹화 하는 과정이 필요했다. 각 필터 조건에 맞게 Group 화 할수 있는 Key가 필요했고, 이를 위해  **String key filed를 포함하고 있는 통계 Class** 를 만들었다.


  ```text  
        public class Statics{
            private List<String> key; // ex) 1:10:O:O:O (남성:30대:흡연O:비만O:당뇨O)
            private long sickCount;
            ....
            ...
        }
        Map<String,Statics> list = new HashMap<>();
        public Map<String,Statics> reduce(){
            StringBuffer newKey = new StringBuffer();
            
            for( 2008년 비환자 집단 ) {
                if(비교군.containsKey(2008년 비환자 집단 고유 Person Key))){
                        if(성별) key.append('남/여');
                        if(나이) key.append('연령별');
                        if(흡연) key.append('O');
                        if(비만) key.append('O');
                        if(당뇨) key.append('O');
                        ....
                   }
                if(list.containsKey(newKey)) // 같은 key를 가지고 있을 경우
                    Statics stCount = list.get(newKey);
                    ...
                    list.put(newKey,stCount);
                else{
                    Statics stCount = new Stcount();
                    list.put(newKey,stCount)
                }
            }
        
  ```  
  결과 샘플  
  ![bp4]({{site.baseurl}}/assets/img/bp4.jpg)       
  
### Cohort 데이터 추출  
DB로부터 저장된 데이터를 Full scan 후 메모리에 올려 API를 통해 서빙.
- 모집단 데이터가 충분한 경우  
ex) 20~30대 데이터  
DB에 있는 데이터로 서빙  
- 모집단 데이터가 소수 인 경우  
ex) 70~80대 데이터는 모수가 부족했다.   
아래 알고리즘을 통해 **예측데이터**를 만들어 서빙.  

1. X축(연령) Y축(발병확률)을 기준으로 그래프를 도식화
2. 원점을 지나는 0~90도의 기울기를 가진 직선들을 표시
3. 표시 되어있는 점(확률)과 직선들 사이의 거리를 계산하고 합을내고 평균이 제일 작은 직선 선택
4. 없는 데이터 예측

예측 과정  
![bp5]({{site.baseurl}}/assets/img/bpdiaryPredict3.jpg)     
  


